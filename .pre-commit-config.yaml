# Pre-commit hooks for Quiniela Predictor
# Install with: pip install pre-commit && pre-commit install

repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        args: [--line-length=120]
        language_version: python3.11
  
  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=120]
  
  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=120, --ignore=E203,W503]
        exclude: migrations/
  
  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: debug-statements
      - id: check-docstring-first
  
  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, backend/app]
        exclude: tests/
  
  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML]
        exclude: tests/
  
  # Critical tests before commit
  - repo: local
    hooks:
      - id: pytest-critical
        name: Run Critical Tests
        entry: pytest
        args: [-m, critical, --tb=short, -q]
        language: system
        types: [python]
        pass_filenames: false
        stages: [commit]
      
      - id: pytest-unit
        name: Run Unit Tests
        entry: pytest
        args: [tests/unit/, --tb=short, -q]
        language: system
        types: [python] 
        pass_filenames: false
        stages: [push]
      
      - id: validate-requirements
        name: Validate Requirements
        entry: python
        args: [-c, "import pkg_resources; pkg_resources.require(open('requirements.txt').read().splitlines())"]
        language: system
        files: requirements.txt
        pass_filenames: false
      
      - id: check-test-coverage
        name: Check Test Coverage
        entry: pytest
        args: [tests/, --cov=backend/app, --cov-fail-under=70, -q]
        language: system
        types: [python]
        pass_filenames: false
        stages: [push]

# Default stages for all hooks
default_stages: [commit]

# Configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks
    
    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false